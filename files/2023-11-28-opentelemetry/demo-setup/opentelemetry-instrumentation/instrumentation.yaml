apiVersion: opentelemetry.io/v1alpha1
kind: Instrumentation
metadata:
  name: instrumentation
spec:
  exporter:
    endpoint: http://otel-collector-lb.otel.svc.cluster.local:4317
  propagators:
    - tracecontext
    - baggage
  sampler:
    # See https://opentelemetry.io/docs/concepts/sdk-configuration/general-sdk-configuration/#otel_traces_sampler
    type: parentbased_traceidratio
    argument: "1.0"
  python:
    env:
      # Python autoinstrumentation only supports http/proto (the grpc module is not installed by default)
      # so data must be sent to 4318 (http) instead of 4317 (grpc).
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector-lb.otel.svc.cluster.local:4318
      - name: OTEL_METRICS_EXPORTER
        value: "otlp"
      - name: OTEL_TRACES_EXPORTER
        value: "otlp"
      - name: OTEL_LOGS_EXPORTER
        value: "none"
      - name: OTEL_PYTHON_EXCLUDED_URLS
        value: "/healthcheck" # comma-separated values: https://opentelemetry.io/docs/instrumentation/python/automatic/agent-config/#excluded-urls
      - name: OTEL_METRIC_EXPORT_INTERVAL
        value: "10000" # 10 seconds, default is 60.
  java:
    env:
      - name: OTEL_EXPORTER_PROMETHEUS_PORT
        value: "9464"
      - name: OTEL_METRICS_EXPORTER
        value: "prometheus,otlp"
      - name: OTEL_TRACES_EXPORTER
        value: "otlp"
      - name: OTEL_LOGS_EXPORTER
        value: "none"
      - name: OTEL_METRIC_EXPORT_INTERVAL
        value: "10000" # 10 seconds, default is 60.
